{"ast":null,"code":"import _objectSpread from\"D:/Quiz App/quiz-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import Timer from\"./Timer\";import QuestionNav from\"./QuestionNav\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuizPage=_ref=>{let{questions,onSubmit}=_ref;const[currentQuestion,setCurrentQuestion]=useState(0);const[answers,setAnswers]=useState({});const[visitedQuestions,setVisitedQuestions]=useState(new Set([0]));const[timeUp,setTimeUp]=useState(false);// Decode HTML entities\nconst decodeHTML=html=>{const txt=document.createElement(\"textarea\");txt.innerHTML=html;return txt.value;};// Handle answer selection\nconst handleAnswerSelect=answer=>{setAnswers(_objectSpread(_objectSpread({},answers),{},{[currentQuestion]:answer}));};// Navigate to specific question\nconst goToQuestion=index=>{setCurrentQuestion(index);setVisitedQuestions(new Set([...visitedQuestions,index]));};// Navigate to previous question\nconst handlePrevious=()=>{if(currentQuestion>0){goToQuestion(currentQuestion-1);}};// Navigate to next question\nconst handleNext=()=>{if(currentQuestion<questions.length-1){goToQuestion(currentQuestion+1);}};// Handle quiz submission\nconst handleSubmit=()=>{const confirmSubmit=window.confirm(\"You have answered \".concat(Object.keys(answers).length,\" out of \").concat(questions.length,\" questions. Do you want to submit?\"));if(confirmSubmit){onSubmit(answers);}};// Auto-submit when time is up\nuseEffect(()=>{if(timeUp){alert(\"Time is up! Your quiz will be submitted automatically.\");onSubmit(answers);}},[timeUp]);const currentQ=questions[currentQuestion];const selectedAnswer=answers[currentQuestion];return/*#__PURE__*/_jsxs(\"div\",{className:\"container quiz-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-header\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"quiz-title\",children:\"Quiz Application\"}),/*#__PURE__*/_jsx(Timer,{initialTime:1800,onTimeUp:()=>setTimeUp(true)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-number\",children:[\"Question \",currentQuestion+1,\" of \",questions.length]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-text\",children:decodeHTML(currentQ.question)}),/*#__PURE__*/_jsx(\"div\",{className:\"options\",children:currentQ.choices.map((choice,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"option \".concat(selectedAnswer===choice?\"selected\":\"\"),onClick:()=>handleAnswerSelect(choice),children:decodeHTML(choice)},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"navigation-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"nav-button prev-button\",onClick:handlePrevious,disabled:currentQuestion===0,children:\"\\u2190 Previous\"}),currentQuestion<questions.length-1?/*#__PURE__*/_jsx(\"button\",{className:\"nav-button next-button\",onClick:handleNext,children:\"Next \\u2192\"}):/*#__PURE__*/_jsx(\"button\",{className:\"nav-button submit-button\",onClick:handleSubmit,children:\"Submit Quiz\"})]})]}),/*#__PURE__*/_jsx(QuestionNav,{totalQuestions:questions.length,currentQuestion:currentQuestion,answers:answers,visitedQuestions:visitedQuestions,onQuestionClick:goToQuestion})]})]});};export default QuizPage;","map":{"version":3,"names":["React","useState","useEffect","Timer","QuestionNav","jsx","_jsx","jsxs","_jsxs","QuizPage","_ref","questions","onSubmit","currentQuestion","setCurrentQuestion","answers","setAnswers","visitedQuestions","setVisitedQuestions","Set","timeUp","setTimeUp","decodeHTML","html","txt","document","createElement","innerHTML","value","handleAnswerSelect","answer","_objectSpread","goToQuestion","index","handlePrevious","handleNext","length","handleSubmit","confirmSubmit","window","confirm","concat","Object","keys","alert","currentQ","selectedAnswer","className","children","initialTime","onTimeUp","question","choices","map","choice","onClick","disabled","totalQuestions","onQuestionClick"],"sources":["D:/Quiz App/quiz-app/client/src/components/QuizPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport QuestionNav from \"./QuestionNav\";\r\n\r\nconst QuizPage = ({ questions, onSubmit }) => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [visitedQuestions, setVisitedQuestions] = useState(new Set([0]));\r\n  const [timeUp, setTimeUp] = useState(false);\r\n\r\n  // Decode HTML entities\r\n  const decodeHTML = (html) => {\r\n    const txt = document.createElement(\"textarea\");\r\n    txt.innerHTML = html;\r\n    return txt.value;\r\n  };\r\n\r\n  // Handle answer selection\r\n  const handleAnswerSelect = (answer) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [currentQuestion]: answer,\r\n    });\r\n  };\r\n\r\n  // Navigate to specific question\r\n  const goToQuestion = (index) => {\r\n    setCurrentQuestion(index);\r\n    setVisitedQuestions(new Set([...visitedQuestions, index]));\r\n  };\r\n\r\n  // Navigate to previous question\r\n  const handlePrevious = () => {\r\n    if (currentQuestion > 0) {\r\n      goToQuestion(currentQuestion - 1);\r\n    }\r\n  };\r\n\r\n  // Navigate to next question\r\n  const handleNext = () => {\r\n    if (currentQuestion < questions.length - 1) {\r\n      goToQuestion(currentQuestion + 1);\r\n    }\r\n  };\r\n\r\n  // Handle quiz submission\r\n  const handleSubmit = () => {\r\n    const confirmSubmit = window.confirm(\r\n      `You have answered ${Object.keys(answers).length} out of ${\r\n        questions.length\r\n      } questions. Do you want to submit?`\r\n    );\r\n    if (confirmSubmit) {\r\n      onSubmit(answers);\r\n    }\r\n  };\r\n\r\n  // Auto-submit when time is up\r\n  useEffect(() => {\r\n    if (timeUp) {\r\n      alert(\"Time is up! Your quiz will be submitted automatically.\");\r\n      onSubmit(answers);\r\n    }\r\n  }, [timeUp]);\r\n\r\n  const currentQ = questions[currentQuestion];\r\n  const selectedAnswer = answers[currentQuestion];\r\n\r\n  return (\r\n    <div className=\"container quiz-page\">\r\n      <div className=\"quiz-header\">\r\n        <h1 className=\"quiz-title\">Quiz Application</h1>\r\n        <Timer initialTime={1800} onTimeUp={() => setTimeUp(true)} />\r\n      </div>\r\n\r\n      <div className=\"quiz-content\">\r\n        <div className=\"question-section\">\r\n          <div className=\"question-card\">\r\n            <div className=\"question-number\">\r\n              Question {currentQuestion + 1} of {questions.length}\r\n            </div>\r\n            <div className=\"question-text\">{decodeHTML(currentQ.question)}</div>\r\n            <div className=\"options\">\r\n              {currentQ.choices.map((choice, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`option ${\r\n                    selectedAnswer === choice ? \"selected\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleAnswerSelect(choice)}\r\n                >\r\n                  {decodeHTML(choice)}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"navigation-buttons\">\r\n            <button\r\n              className=\"nav-button prev-button\"\r\n              onClick={handlePrevious}\r\n              disabled={currentQuestion === 0}\r\n            >\r\n              ← Previous\r\n            </button>\r\n            {currentQuestion < questions.length - 1 ? (\r\n              <button className=\"nav-button next-button\" onClick={handleNext}>\r\n                Next →\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"nav-button submit-button\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Submit Quiz\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <QuestionNav\r\n          totalQuestions={questions.length}\r\n          currentQuestion={currentQuestion}\r\n          answers={answers}\r\n          visitedQuestions={visitedQuestions}\r\n          onQuestionClick={goToQuestion}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}