{"ast":null,"code":"var _jsxFileName = \"D:\\\\Quiz App\\\\quiz-app\\\\client\\\\src\\\\components\\\\StartPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StartPage = ({\n  onStartQuiz\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Email validation function\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  // Handle quiz start\n  const handleStart = async () => {\n    // Validate email\n    if (!email.trim()) {\n      setError(\"Please enter your email address\");\n      return;\n    }\n    if (!validateEmail(email)) {\n      setError(\"Please enter a valid email address\");\n      return;\n    }\n    setError(\"\");\n    setLoading(true);\n    try {\n      // Fetch questions from backend\n      const response = await axios.get(\"/api/questions\");\n      if (response.data.results && response.data.results.length === 15) {\n        // Process questions to include all choices in a single array\n        const processedQuestions = response.data.results.map(q => {\n          const allChoices = [...q.incorrect_answers, q.correct_answer];\n          // Shuffle choices\n          const shuffledChoices = allChoices.sort(() => Math.random() - 0.5);\n          return {\n            ...q,\n            choices: shuffledChoices\n          };\n        });\n        onStartQuiz(email, processedQuestions);\n      } else {\n        setError(\"Failed to load quiz questions. Please try again.\");\n      }\n    } catch (err) {\n      console.error(\"Error fetching questions:\", err);\n      setError(\"Failed to connect to server. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container start-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFAF Quiz Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome to the quiz! You'll have \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"30 minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 42\n      }, this), \" to answer\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"15 questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Navigate between questions, review your answers, and submit when ready. The quiz will auto-submit when the timer reaches zero.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter your email address\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      disabled: loading,\n      children: loading ? \"Loading Questions...\" : \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-message\",\n      children: \"Fetching questions from OpenTDB...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(StartPage, \"muSjTRcehwzSfMTWb/qcZs+qYq8=\");\n_c = StartPage;\nexport default StartPage;\nvar _c;\n$RefreshReg$(_c, \"StartPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","StartPage","onStartQuiz","_s","email","setEmail","error","setError","loading","setLoading","validateEmail","emailRegex","test","handleStart","trim","response","get","data","results","length","processedQuestions","map","q","allChoices","incorrect_answers","correct_answer","shuffledChoices","sort","Math","random","choices","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["D:/Quiz App/quiz-app/client/src/components/StartPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst StartPage = ({ onStartQuiz }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Email validation function\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  // Handle quiz start\r\n  const handleStart = async () => {\r\n    // Validate email\r\n    if (!email.trim()) {\r\n      setError(\"Please enter your email address\");\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(email)) {\r\n      setError(\"Please enter a valid email address\");\r\n      return;\r\n    }\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Fetch questions from backend\r\n      const response = await axios.get(\"/api/questions\");\r\n\r\n      if (response.data.results && response.data.results.length === 15) {\r\n        // Process questions to include all choices in a single array\r\n        const processedQuestions = response.data.results.map((q) => {\r\n          const allChoices = [...q.incorrect_answers, q.correct_answer];\r\n          // Shuffle choices\r\n          const shuffledChoices = allChoices.sort(() => Math.random() - 0.5);\r\n\r\n          return {\r\n            ...q,\r\n            choices: shuffledChoices,\r\n          };\r\n        });\r\n\r\n        onStartQuiz(email, processedQuestions);\r\n      } else {\r\n        setError(\"Failed to load quiz questions. Please try again.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching questions:\", err);\r\n      setError(\"Failed to connect to server. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container start-page\">\r\n      <h1>ðŸŽ¯ Quiz Application</h1>\r\n      <p>\r\n        Welcome to the quiz! You'll have <strong>30 minutes</strong> to answer{\" \"}\r\n        <strong>15 questions</strong>.\r\n      </p>\r\n      <p>\r\n        Navigate between questions, review your answers, and submit when ready.\r\n        The quiz will auto-submit when the timer reaches zero.\r\n      </p>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Enter your email address\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        disabled={loading}\r\n      />\r\n      <button onClick={handleStart} disabled={loading}>\r\n        {loading ? \"Loading Questions...\" : \"Start Quiz\"}\r\n      </button>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {loading && (\r\n        <div className=\"loading-message\">\r\n          Fetching questions from OpenTDB...\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}