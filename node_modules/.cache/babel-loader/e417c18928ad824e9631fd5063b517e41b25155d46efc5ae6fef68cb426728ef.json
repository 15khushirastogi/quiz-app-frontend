{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Timer=_ref=>{let{initialTime,onTimeUp}=_ref;const[timeLeft,setTimeLeft]=useState(initialTime);// 1800 seconds = 30 minutes\nuseEffect(()=>{// Exit if time is up\nif(timeLeft<=0){onTimeUp();return;}// Set up interval to decrease time every second\nconst timer=setInterval(()=>{setTimeLeft(prevTime=>prevTime-1);},1000);// Cleanup interval on component unmount\nreturn()=>clearInterval(timer);},[timeLeft,onTimeUp]);// Format time as MM:SS\nconst formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return\"\".concat(mins.toString().padStart(2,\"0\"),\":\").concat(secs.toString().padStart(2,\"0\"));};// Add warning class when less than 5 minutes remaining\nconst isWarning=timeLeft<=300;return/*#__PURE__*/_jsxs(\"div\",{className:\"timer \".concat(isWarning?\"warning\":\"\"),children:[\"\\u23F1\\uFE0F \",formatTime(timeLeft)]});};export default Timer;","map":{"version":3,"names":["React","useState","useEffect","jsxs","_jsxs","Timer","_ref","initialTime","onTimeUp","timeLeft","setTimeLeft","timer","setInterval","prevTime","clearInterval","formatTime","seconds","mins","Math","floor","secs","concat","toString","padStart","isWarning","className","children"],"sources":["D:/Quiz App/quiz-app/client/src/components/Timer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Timer = ({ initialTime, onTimeUp }) => {\r\n  const [timeLeft, setTimeLeft] = useState(initialTime); // 1800 seconds = 30 minutes\r\n\r\n  useEffect(() => {\r\n    // Exit if time is up\r\n    if (timeLeft <= 0) {\r\n      onTimeUp();\r\n      return;\r\n    }\r\n\r\n    // Set up interval to decrease time every second\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prevTime) => prevTime - 1);\r\n    }, 1000);\r\n\r\n    // Cleanup interval on component unmount\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft, onTimeUp]);\r\n\r\n  // Format time as MM:SS\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, \"0\")}:${secs\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  };\r\n\r\n  // Add warning class when less than 5 minutes remaining\r\n  const isWarning = timeLeft <= 300;\r\n\r\n  return (\r\n    <div className={`timer ${isWarning ? \"warning\" : \"\"}`}>\r\n      ⏱️ {formatTime(timeLeft)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAA+B,IAA9B,CAAEC,WAAW,CAAEC,QAAS,CAAC,CAAAF,IAAA,CACtC,KAAM,CAACG,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAACM,WAAW,CAAC,CAAE;AAEvDL,SAAS,CAAC,IAAM,CACd;AACA,GAAIO,QAAQ,EAAI,CAAC,CAAE,CACjBD,QAAQ,CAAC,CAAC,CACV,OACF,CAEA;AACA,KAAM,CAAAG,KAAK,CAAGC,WAAW,CAAC,IAAM,CAC9BF,WAAW,CAAEG,QAAQ,EAAKA,QAAQ,CAAG,CAAC,CAAC,CACzC,CAAC,CAAE,IAAI,CAAC,CAER;AACA,MAAO,IAAMC,aAAa,CAACH,KAAK,CAAC,CACnC,CAAC,CAAE,CAACF,QAAQ,CAAED,QAAQ,CAAC,CAAC,CAExB;AACA,KAAM,CAAAO,UAAU,CAAIC,OAAO,EAAK,CAC9B,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAG,EAAE,CAAC,CACrC,KAAM,CAAAI,IAAI,CAAGJ,OAAO,CAAG,EAAE,CACzB,SAAAK,MAAA,CAAUJ,IAAI,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,MAAAF,MAAA,CAAID,IAAI,CAC/CE,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,EACrB,CAAC,CAED;AACA,KAAM,CAAAC,SAAS,CAAGf,QAAQ,EAAI,GAAG,CAEjC,mBACEL,KAAA,QAAKqB,SAAS,UAAAJ,MAAA,CAAWG,SAAS,CAAG,SAAS,CAAG,EAAE,CAAG,CAAAE,QAAA,EAAC,eAClD,CAACX,UAAU,CAACN,QAAQ,CAAC,EACrB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}